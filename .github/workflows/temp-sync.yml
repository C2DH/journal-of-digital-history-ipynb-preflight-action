name: Check Changed Files on Main or Master

on:
  push:

jobs:
  check-files:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Check branch and changed files
        run: |
          # Extract branch name from GITHUB_REF (e.g. "refs/heads/main" becomes "main")
          BRANCH=${GITHUB_REF#refs/heads/}
          echo "Current branch: $BRANCH"
          
          # Proceed only if branch is 'main' or 'master'
          if [ "$BRANCH" = "main" ] || [ "$BRANCH" = "master" ]; then
            echo "main branch"
          else
            echo "Not on main or master branch. Skipping file checks."
            exit 0
          fi
      - name: Get changed files
        run: |
          # Save the before and after commit hashes
          BEFORE_COMMIT="${{ github.event.before }}"
          AFTER_COMMIT="${{ github.event.after }}"

          # Determine how to get changed files:
          # If BEFORE_COMMIT is all zeros, it's likely a new branch or similar situation.
          if [ "$BEFORE_COMMIT" = "0000000000000000000000000000000000000000" ]; then
            echo "No previous commit found. Using last commit for file changes."
            CHANGED_FILES=$(git diff-tree --no-commit-id --name-only -r HEAD)
          else
            # Optionally, check if the commit exists to avoid fatal errors
            if ! git rev-parse "$BEFORE_COMMIT" >/dev/null 2>&1; then
              echo "Before commit not found. Using last commit for file changes."
              CHANGED_FILES=$(git diff-tree --no-commit-id --name-only -r HEAD)
            else
              CHANGED_FILES=$(git diff --name-only "$BEFORE_COMMIT" "$AFTER_COMMIT")
            fi
          fi

          echo "Changed files: $CHANGED_FILES"
      - name: Compare the changed files
        run: |
          # Check for the presence of target files
          HAS_IPYNB=$(echo "$CHANGED_FILES" | grep -w "article.ipynb" || true)
          HAS_MD=$(echo "$CHANGED_FILES" | grep -w "article.md" || true)

          if [[ -n "$HAS_IPYNB" && -n "$HAS_MD" ]]; then
            echo "error"
          elif [[ -n "$HAS_IPYNB" ]]; then
            echo "ipynb"
          elif [[ -n "$HAS_MD" ]]; then
            echo "md"
          else
            echo "No target file changed."
          fi
